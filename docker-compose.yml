version: '3'
services:

    db:
      container_name: "postgres"
      image: postgres
      environment:
        POSTGRES_DB: $POSTGRES_DB
        POSTGRES_USER: $POSTGRES_USER
        POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      ports:
        - "${POSTGRES_PORT}:5432"
      volumes:
        - pgdata:/var/lib/postgresql/data/
        - ./postgres/dump:/dump
        #- ./postgres/init:/docker-entrypoint-initdb.d

    nginx:
        container_name: "nginx"
        image: nginx
        restart: always
        environment:
          #- NGINX_HOST
          - NGINX_PORT=80
        ports:
          - "80:80"
        volumes:
          - appdata:/app
          - tmpdata:/tmp
          - ./nginx/uwsgi_params:/etc/nginx/uwsgi_params
          - ./nginx/nginx.conf:/etc/nginx/nginx.conf
          - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
        depends_on:
          - app
        
    app:
        container_name: "app"
        build:
          context: ./app
          dockerfile: Dockerfile
          args:
            APP_SECRET_KEY: $APP_SECRET_KEY
            APP_USER: $APP_USER
            APP_USER_EMAIL: $APP_USER_EMAIL
            APP_USER_PASSWORD: $APP_USER_PASSWORD
            POSTGRES_HOST: $POSTGRES_HOST
            POSTGRES_PORT: $POSTGRES_PORT
            POSTGRES_DB: $POSTGRES_DB
            POSTGRES_USER: $POSTGRES_USER
            POSTGRES_PASSWORD: $POSTGRES_PASSWORD
        restart: always
        #command: uwsgi --ini uwsgi.ini
        volumes:
          - appdata:/app
          # App
          - ./app/config:/app/config
          - ./app/faq:/app/faq
          - ./app/uploads:/app/uploads
          - ./app/manage.py:/app/manage.py
          - ./app/requirements.txt:/app/requirements.txt
          # Entrypoint
          - ./app/uwsgi.ini:/app/uwsgi.ini
          - ./app/entrypoint.sh:/app/entrypoint.sh
          # tmp
          - tmpdata:/tmp
        depends_on:
          - db

volumes:
    appdata:
      driver: local
      driver_opts:
        type: none
        device: ${PWD}/app
        o: bind
    tmpdata:
    pgdata:

